(()=>{"use strict";const e=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),t=e=>{const t=e.split(" "),o=document.querySelector("#navbar"),n=!!localStorage.getItem("token"),a=!!localStorage.getItem("admin"),c={register:'<li><a href="/register">회원가입</a></li>',login:'<li><a href="/login">로그인</a></li>'},r={account:'<li><a href="/account">계정관리</a></li>',logout:'<li><a href="#" id="logout">로그아웃</a></li>',productAdd:'<li><a href="/product/add">제품 추가</a></li>',categoryAdd:'<li><a href="/category/add">카테고리 추가</a></li>'},s={admin:'<li><a href="/admin">페이지관리</a></li>'},i=document.createElement("script");i.innerText="\n      const logoutElem = document.querySelector('#logout'); \n      \n      if (logoutElem) {\n        logoutElem.addEventListener('click', () => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('admin');\n\n          window.location.href = '/';\n        });\n      }\n  ";let l="";for(const e of t)a&&(l+=s[e]??""),l+=n?r[e]??"":c[e]??"";o.insertAdjacentHTML("afterbegin",l),o.after(i)};async function o(e,t="",o){const n=`${e}/${t}`,a=JSON.stringify(o);console.log(`%cPATCH 요청: ${n}`,"color: #059c4b;"),console.log(`%cPATCH 요청 데이터: ${a}`,"color: #059c4b;");const c=await fetch(n,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:a});if(!c.ok){const e=await c.json(),{reason:t}=e;throw new Error(t)}return await c.json()}const n=document.querySelector("#ordersCount"),a=document.querySelector("#prepareCount"),c=document.querySelector("#deliveryCount"),r=document.querySelector("#completeCount"),s=document.querySelector("#ordersContainer"),i=document.querySelector("#modal"),l=document.querySelector("#modalBackground"),d=document.querySelector("#modalCloseButton"),u=document.querySelector("#deleteCompleteButton"),m=document.querySelector("#deleteCancelButton");let g;async function p(e){e.preventDefault();try{await async function(e,t="",o={}){const n=`${e}/${t}`,a=JSON.stringify(o);console.log(`DELETE 요청 ${n}`),console.log(`DELETE 요청 데이터: ${a}`);const c=await fetch(n,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:a});if(!c.ok){const e=await c.json(),{reason:t}=e;throw new Error(t)}return await c.json()}("/api/orders",g),alert("주문 정보가 삭제되었습니다.");document.querySelector(`#order-${g}`).remove(),g="",v()}catch(e){alert(`주문정보 삭제 과정에서 오류가 발생하였습니다: ${e}`)}}function y(){g="",v()}function h(){i.classList.add("is-active")}function v(){i.classList.remove("is-active")}function f(e){27===e.keyCode&&v()}(async()=>{const e=localStorage.getItem("token");if(!e){const e=window.location.pathname,t=window.location.search;window.location.replace(`/login?previouspage=${e+t}`)}const t=await fetch("/api/admin/check",{headers:{Authorization:`Bearer ${e}`}}),{result:o}=await t.json();"success"!==o?(alert("관리자 전용 페이지입니다."),window.location.replace("/")):window.document.body.style.display="block"})(),(()=>{switch(window.location.pathname){case"/":case"/cart/":case"/product/detail/":case"/product/list/":t("admin register login account logout");break;case"/account/orders/":case"/account/security/":case"/account/signout/":case"/admin/orders/":case"/admin/users/":case"/order/complete/":case"/order/":case"/product/add/":t("admin account logout");break;case"/account/":t("admin logout");break;case"/admin/":t("account logout");break;case"/category/add/":t("admin account productAdd logout");break;case"/login/":t("register");break;case"/register/":t("login")}})(),async function(){const t=await async function(e,t=""){const o=`${e}/${t}`;console.log(`%cGET 요청: ${o} `,"color: #a25cd1;");const n=await fetch(o,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(!n.ok){const e=await n.json(),{reason:t}=e;throw new Error(t)}return await n.json()}("/api/orderlist/all"),i={ordersCount:0,prepareCount:0,deliveryCount:0,completeCount:0};for(const n of t){const{_id:t,totalPrice:a,createdAt:c,summaryTitle:r,status:l}=n,d=c.split("T")[0];i.ordersCount+=1,"상품 준비중"===l?i.prepareCount+=1:"상품 배송중"===l?i.deliveryCount+=1:"배송완료"===l?i.completeCount+=1:console.log(l),s.insertAdjacentHTML("beforeend",`\n        <div class="columns orders-item" id="order-${t}">\n          <div class="column is-2">${d}</div>\n          <div class="column is-4 order-summary">${r}</div>\n          <div class="column is-2">${e(a)}</div>\n          <div class="column is-2">\n            <div class="select" >\n              <select id="statusSelectBox-${t}">\n                <option \n                  class="has-background-danger-light has-text-danger"\n                  ${"상품 준비중"===l?"selected":""} \n                  value="상품 준비중">\n                  상품 준비중\n                </option>\n                <option \n                  class="has-background-primary-light has-text-primary"\n                  ${"상품 배송중"===l?"selected":""} \n                  value="상품 배송중">\n                  상품 배송중\n                </option>\n                <option \n                  class="has-background-grey-light"\n                  ${"배송완료"===l?"selected":""} \n                  value="배송완료">\n                  배송완료\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class="column is-2">\n            <button class="button" id="deleteButton-${t}" >주문 취소</button>\n          </div>\n        </div>\n      `);const u=document.querySelector(`#statusSelectBox-${t}`),m=document.querySelector(`#deleteButton-${t}`),p=u.selectedIndex;u.className=u[p].className,u.addEventListener("change",(async()=>{const e={status:u.value},n=u.selectedIndex;u.className=u[n].className,await o("/api/orders",t,e)})),m.addEventListener("click",(()=>{g=t,h()}))}n.innerText=e(i.ordersCount),a.innerText=e(i.prepareCount),c.innerText=e(i.deliveryCount),r.innerText=e(i.completeCount)}(),l.addEventListener("click",v),d.addEventListener("click",v),document.addEventListener("keydown",f),u.addEventListener("click",p),m.addEventListener("click",y)})();