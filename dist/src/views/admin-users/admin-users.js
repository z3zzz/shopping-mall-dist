(()=>{"use strict";const e=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),t=(e,t)=>1===e.length?e:e.slice(0,t)+"*".repeat(e.length-t),n=e=>{const t=e.split(" "),n=document.querySelector("#navbar"),o=!!localStorage.getItem("token"),a=!!localStorage.getItem("admin"),c={register:'<li><a href="/register">회원가입</a></li>',login:'<li><a href="/login">로그인</a></li>'},s={account:'<li><a href="/account">계정관리</a></li>',logout:'<li><a href="#" id="logout">로그아웃</a></li>',productAdd:'<li><a href="/product/add">제품 추가</a></li>',categoryAdd:'<li><a href="/category/add">카테고리 추가</a></li>'},i={admin:'<li><a href="/admin">페이지관리</a></li>'},l=document.createElement("script");l.innerText="\n      const logoutElem = document.querySelector('#logout'); \n      \n      if (logoutElem) {\n        logoutElem.addEventListener('click', () => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('admin');\n\n          window.location.href = '/';\n        });\n      }\n  ";let r="";for(const e of t)a&&(r+=i[e]??""),r+=o?s[e]??"":c[e]??"";n.insertAdjacentHTML("afterbegin",r),n.after(l)};const o=document.querySelector("#usersCount"),a=document.querySelector("#adminCount"),c=document.querySelector("#OAuthCount"),s=document.querySelector("#usersContainer"),i=document.querySelector("#modal"),l=document.querySelector("#modalBackground"),r=document.querySelector("#modalCloseButton"),d=document.querySelector("#deleteCompleteButton"),u=document.querySelector("#deleteCancelButton");let m;function g(){m="",v()}function h(){i.classList.add("is-active")}function v(){i.classList.remove("is-active")}function p(e){27===e.keyCode&&v()}(async()=>{const e=localStorage.getItem("token");if(!e){const e=window.location.pathname,t=window.location.search;window.location.replace(`/login?previouspage=${e+t}`)}const t=await fetch("/api/admin/check",{headers:{Authorization:`Bearer ${e}`}}),{result:n}=await t.json();"success"!==n?(alert("관리자 전용 페이지입니다."),window.location.replace("/")):window.document.body.style.display="block"})(),(()=>{switch(window.location.pathname){case"/":case"/cart/":case"/product/detail/":case"/product/list/":n("admin register login account logout");break;case"/account/orders/":case"/account/security/":case"/account/signout/":case"/admin/orders/":case"/admin/users/":case"/order/complete/":case"/order/":case"/product/add/":n("admin account logout");break;case"/account/":n("admin logout");break;case"/admin/":n("account logout");break;case"/category/add/":n("admin account productAdd logout");break;case"/login/":n("register");break;case"/register/":n("login")}})(),async function(){const n=await async function(e,t=""){const n=`${e}/${t}`;console.log(`%cGET 요청: ${n} `,"color: #a25cd1;");const o=await fetch(n,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(!o.ok){const e=await o.json(),{reason:t}=e;throw new Error(t)}return await o.json()}("/api/userlist"),i={usersCount:0,adminCount:0,OAuthCount:0};for(const e of n){const{_id:n,email:o,fullName:a,role:c,isOAuth:l,createdAt:r}=e,d=r.split("T")[0];i.usersCount+=1,"admin"===c&&(i.adminCount+=1),l&&(i.OAuthCount+=1),s.insertAdjacentHTML("beforeend",`\n        <div class="columns orders-item" id="user-${n}">\n          <div class="column is-2">${d}</div>\n          <div class="column is-2">${t(o,3)}</div>\n          <div class="column is-2">\n            ${l?'<span class="tag is-success">소셜</span>':'<span class="tag">일반</span>'}\n          </div>\n          <div class="column is-2">${t(a,1)}</div>\n          <div class="column is-2">\n            <div class="select" >\n              <select id="roleSelectBox-${n}">\n                <option \n                  class="has-background-link-light has-text-link"\n                  ${"basic-user"===c?"selected":""} \n                  value="basic-user">\n                  일반사용자\n                </option>\n                <option \n                  class="has-background-danger-light has-text-danger"\n                  ${"admin"===c?"selected":""} \n                  value="admin">\n                  관리자\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class="column is-2">\n            <button class="button" id="deleteButton-${n}" >회원정보 삭제</button>\n          </div>\n        </div>\n      `);const u=document.querySelector(`#roleSelectBox-${n}`),g=document.querySelector(`#deleteButton-${n}`),v=u.selectedIndex;u.className=u[v].className,u.addEventListener("change",(async()=>{u.value;const e=u.selectedIndex;u.className=u[e].className,console.log("실제 role 변경 api는 잠시 막았습니다.")})),g.addEventListener("click",(()=>{m=n,h()}))}o.innerText=e(i.usersCount),a.innerText=e(i.adminCount),c.innerText=e(i.OAuthCount)}(),l.addEventListener("click",v),r.addEventListener("click",v),document.addEventListener("keydown",p),d.addEventListener("click",(()=>alert("삭제 api는 잠시 막았습니다."))),u.addEventListener("click",g)})();